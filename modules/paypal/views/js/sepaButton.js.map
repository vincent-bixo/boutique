{"version":3,"file":"js/sepaButton.js","mappings":"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","sources":["webpack://paypal/./_dev/js/apmButton.js","webpack://paypal/./_dev/js/tools.js","webpack://paypal/./node_modules/intl-tel-input/build/js/intlTelInput.js","webpack://paypal/./node_modules/intl-tel-input/index.js","webpack://paypal/webpack/bootstrap","webpack://paypal/webpack/runtime/compat get default export","webpack://paypal/webpack/runtime/define property getters","webpack://paypal/webpack/runtime/hasOwnProperty shorthand","webpack://paypal/./_dev/js/sepaButton.js"],"sourcesContent":["/**\n * 2007-2023 PayPal\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n *  versions in the future. If you wish to customize PrestaShop for your\n *  needs please refer to http://www.prestashop.com for more information.\n *\n *  @author 2007-2023 PayPal\n *  @author 202 ecommerce <tech@202-ecommerce.com>\n *  @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)\n *  @copyright PayPal\n *\n */\n// init incontext\n\nimport {Tools} from './tools.js';\n\nexport const ApmButton = function(conf) {\n\n    this.method = typeof conf['method'] != 'undefined' ? conf['method'] : null;\n\n    if (typeof conf['button'] != 'undefined') {\n      if (conf['button'] instanceof Element) {\n        this.button = conf['button'];\n      } else {\n        this.button = document.querySelector(conf['button']);\n      }\n    }\n\n    this.controller = typeof conf['controller'] != 'undefined' ? conf['controller'] : null;\n\n    this.validationController = typeof conf['validationController'] != 'undefined' ? conf['validationController'] : null;\n\n    this.paypal = conf['paypal'] === undefined ? null : conf['paypal'];\n\n    this.messages = conf['messages'] === undefined ? [] : conf['messages'];\n\n    this.isMoveButtonAtEnd = conf['isMoveButtonAtEnd'] === undefined ? [] : conf['isMoveButtonAtEnd'];\n};\n\nApmButton.prototype.initButton = function() {\n  if (this.paypal == null) {\n    return;\n  }\n\n  if (this.isMoveButtonAtEnd) {\n    let paypalButtonsContainer = this.getPaypalButtonsContainer();\n    paypalButtonsContainer.append(this.button);\n    this.button.style.display = 'none';\n  }\n\n  let paypalButton = this.paypal.Buttons({\n    fundingSource: this.method,\n\n    createOrder: function(data, actions) {\n      return this.getIdOrder();\n    }.bind(this),\n\n    onApprove: function(data, actions) {\n      this.sendData(data);\n    }.bind(this),\n\n  });\n\n  if (paypalButton.isEligible() == false) {\n    let buttonContainer = this.button instanceof Element ? this.button : document.querySelector(this.button);\n\n    if (buttonContainer instanceof Element) {\n      buttonContainer.appendChild(\n        Tools.getAlert(\n          this.messages['NOT_ELIGIBLE'] === undefined ? 'Payment method is not eligible' : this.messages['NOT_ELIGIBLE'],\n          'danger')\n      );\n    }\n\n    return;\n  }\n\n  paypalButton.render(this.button);\n\n  Tools.disableTillConsenting(\n    this.button,\n    document.getElementById('conditions_to_approve[terms-and-conditions]')\n  );\n};\n\nApmButton.prototype.getIdOrder = function() {\n\n  let url = new URL(this.controller);\n  url.searchParams.append('ajax', '1');\n  url.searchParams.append('action', 'CreateOrder');\n\n  return fetch(url.toString(), {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({page: 'cart', apmMethod: this.method, addAddress: true})\n  }).then(function(res) {\n    return res.json();\n  }).then(function(data) {\n    if (data.success) {\n      return data.idOrder;\n    }\n  });\n};\n\nApmButton.prototype.sendData = function(data) {\n  let form = document.createElement('form');\n  let input = document.createElement('input');\n\n  input.name = \"paymentData\";\n  input.value = JSON.stringify(data);\n\n  form.method = \"POST\";\n  form.action = this.validationController;\n\n  form.appendChild(input);\n  document.body.appendChild(form);\n  form.submit();\n};\n\nApmButton.prototype.hideElementTillPaymentOptionChecked = function(paymentOptionSelector, hideElementSelector) {\n  Tools.hideElementTillPaymentOptionChecked(paymentOptionSelector, hideElementSelector);\n};\n\nApmButton.prototype.showElementIfPaymentOptionChecked = function(checkElementSelector, showElementSelector) {\n  Tools.showElementIfPaymentOptionChecked(checkElementSelector, showElementSelector);\n};\n\nApmButton.prototype.addMarkTo = function(element, styles = {}) {\n  if (element instanceof Element == false) {\n    return;\n  }\n\n  const markContainer = document.createElement('span');\n\n  for (let key in styles) {\n    markContainer.style[key] = styles[key];\n  }\n\n  markContainer.setAttribute('paypal-mark-container', '');\n  element.appendChild(markContainer);\n\n  const mark = this.paypal.Marks({\n    fundingSource: this.method\n  });\n\n  if (mark.isEligible()) {\n    mark.render(markContainer);\n  }\n};\n\nApmButton.prototype.getPaypalButtonsContainer = function() {\n  if (document.querySelector('#paypal-buttons')) {\n    return document.querySelector('#paypal-buttons');\n  }\n\n  var container = document.createElement('div');\n  container.id = 'paypal-buttons';\n  container.style = 'width: 300px';\n\n  document.querySelector('#payment-confirmation').after(container);\n\n  return container;\n};\n\nwindow.ApmButton = ApmButton;\n\n\n","/**\n * 2007-2023 PayPal\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n *  versions in the future. If you wish to customize PrestaShop for your\n *  needs please refer to http://www.prestashop.com for more information.\n *\n *  @author 2007-2023 PayPal\n *  @author 202 ecommerce <tech@202-ecommerce.com>\n *  @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)\n *  @copyright PayPal\n *\n */\nimport intlTelInput from 'intl-tel-input';\n\nexport const Tools = {\n  // Show error message\n  getAlert(message, typeAlert) {\n    const alert = document.createElement('div');\n    let messageNode = document.createElement('div');\n    messageNode.innerHTML = message;\n    alert.className = `alert alert-${typeAlert}`;\n    alert.appendChild(messageNode);\n    return alert;\n  },\n\n  hideConfiguration(name) {\n    let selector = `[name=\"${name}\"]`;\n    let configuration = $(selector);\n    let formGroup = configuration.closest('.form-group');\n\n    formGroup.hide();\n  },\n\n  showConfiguration(name) {\n    let selector = `[name=\"${name}\"]`;\n    let configuration = $(selector);\n    let formGroup = configuration.closest('.form-group');\n\n    formGroup.show();\n  },\n\n  isVisible(el) {\n    const style = window.getComputedStyle(el);\n    return  style.width !== \"0\" &&\n      style.height !== \"0\" &&\n      style.opacity !== \"0\" &&\n      style.display!=='none' &&\n      style.visibility!== 'hidden';\n  },\n\n  disableTillConsenting(disabledElement, checkBox) {\n    if (disabledElement instanceof Element == false) {\n      return;\n    }\n\n    if (checkBox instanceof Element == false) {\n      return;\n    }\n\n    Tools.disable(disabledElement);\n\n    checkBox.addEventListener('click', function() {\n      if (checkBox.checked) {\n        Tools.enable(disabledElement);\n      } else {\n        Tools.disable(disabledElement);\n      }\n    });\n\n    $('.payment-option').click(function() {\n      if (checkBox.checked) {\n        Tools.enable(disabledElement);\n      } else {\n        Tools.disable(disabledElement);\n      }\n    });\n  },\n\n  disable(element) {\n    if (element instanceof Element == false) {\n      return;\n    }\n\n    element.style.pointerEvents = 'none';\n    element.style.opacity = '0.5';\n  },\n\n  enable(element) {\n    if (element instanceof Element == false) {\n      return;\n    }\n\n    element.style.pointerEvents = '';\n    element.style.opacity = '1';\n  },\n\n  hideElementTillPaymentOptionChecked(checkElementSelector, hideElementSelector) {\n    const checkElement = document.querySelector(checkElementSelector);\n    const hideElement = document.querySelector(hideElementSelector);\n\n    if (checkElement instanceof Element == false) {\n      return;\n    }\n\n    if (hideElement instanceof Element == false) {\n      return;\n    }\n\n    if ('paypalToolsHiddenElemenList' in window == false) {\n      window.paypalToolsHiddenElemenList = {};\n    }\n\n    if (hideElementSelector in window.paypalToolsHiddenElemenList) {\n      window.paypalToolsHiddenElemenList[hideElementSelector].push(checkElement);\n      return;\n    }\n\n    window.paypalToolsHiddenElemenList[hideElementSelector] = [checkElement];\n    const options = checkElement.closest('.payment-options');\n\n    if (options instanceof Element == false) {\n      return;\n    }\n\n    options.addEventListener('input', function(event) {\n      let isHide = false;\n      window.paypalToolsHiddenElemenList[hideElementSelector].forEach(function(elem) {\n        if (elem.checked) {\n          isHide = true;\n        }\n      });\n\n      if (isHide) {\n        hideElement.style.visibility = 'hidden';\n      } else {\n        hideElement.style.visibility = 'initial';\n      }\n    })\n  },\n\n  showElementIfPaymentOptionChecked(checkElementSelector, showElementSelector) {\n    const checkElement = document.querySelector(checkElementSelector);\n    const showElement = document.querySelector(showElementSelector);\n\n    if (checkElement instanceof Element == false) {\n      return;\n    }\n\n    if (showElement instanceof Element == false) {\n      return;\n    }\n\n    if ('paypalToolsShowElemenList' in window == false) {\n      window.paypalToolsShowElemenList = {};\n    }\n\n    if (showElementSelector in window.paypalToolsShowElemenList) {\n      window.paypalToolsShowElemenList[showElementSelector].push(checkElement);\n      return;\n    }\n\n    window.paypalToolsShowElemenList[showElementSelector] = [checkElement];\n    const options = checkElement.closest('.payment-options');\n\n    if (options instanceof Element == false) {\n      return;\n    }\n\n    options.addEventListener('input', function(event) {\n      let isShow = false;\n      window.paypalToolsShowElemenList[showElementSelector].forEach(function(elem) {\n        if (elem.checked) {\n          isShow = true;\n        }\n      });\n\n      if (isShow) {\n        showElement.style.display = 'block';\n      } else {\n        showElement.style.display = 'none';\n      }\n    });\n  },\n\n  initPhoneInput(input, options = {}) {\n    if (false == input instanceof Element) {\n      return false;\n    }\n\n    input.addEventListener('input', function(e) {\n      e.target.value = e.target.value.replace('+', '')\n    });\n\n    return intlTelInput(input, options);\n  },\n};\n\nwindow.PaypalTools = Tools;\nlet event = new Event('paypal-tools-loaded');\ndocument.dispatchEvent(event);\n","/*\n * International Telephone Input v17.0.16\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function(factory) {\n    if (typeof module === \"object\" && module.exports) module.exports = factory(); else window.intlTelInput = factory();\n})(function(undefined) {\n    \"use strict\";\n    return function() {\n        // Array of country objects for the flag dropdown.\n        // Here is the criteria for the plugin to support a given country/territory\n        // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n        // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n        // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n        // Each country array has the following information:\n        // [\n        //    Country name,\n        //    iso2 code,\n        //    International dial code,\n        //    Order (if >1 country with same dial code),\n        //    Area codes\n        // ]\n        var allCountries = [ [ \"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\" ], [ \"Albania (Shqipëri)\", \"al\", \"355\" ], [ \"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\" ], [ \"American Samoa\", \"as\", \"1\", 5, [ \"684\" ] ], [ \"Andorra\", \"ad\", \"376\" ], [ \"Angola\", \"ao\", \"244\" ], [ \"Anguilla\", \"ai\", \"1\", 6, [ \"264\" ] ], [ \"Antigua and Barbuda\", \"ag\", \"1\", 7, [ \"268\" ] ], [ \"Argentina\", \"ar\", \"54\" ], [ \"Armenia (Հայաստան)\", \"am\", \"374\" ], [ \"Aruba\", \"aw\", \"297\" ], [ \"Ascension Island\", \"ac\", \"247\" ], [ \"Australia\", \"au\", \"61\", 0 ], [ \"Austria (Österreich)\", \"at\", \"43\" ], [ \"Azerbaijan (Azərbaycan)\", \"az\", \"994\" ], [ \"Bahamas\", \"bs\", \"1\", 8, [ \"242\" ] ], [ \"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\" ], [ \"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\" ], [ \"Barbados\", \"bb\", \"1\", 9, [ \"246\" ] ], [ \"Belarus (Беларусь)\", \"by\", \"375\" ], [ \"Belgium (België)\", \"be\", \"32\" ], [ \"Belize\", \"bz\", \"501\" ], [ \"Benin (Bénin)\", \"bj\", \"229\" ], [ \"Bermuda\", \"bm\", \"1\", 10, [ \"441\" ] ], [ \"Bhutan (འབྲུག)\", \"bt\", \"975\" ], [ \"Bolivia\", \"bo\", \"591\" ], [ \"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\" ], [ \"Botswana\", \"bw\", \"267\" ], [ \"Brazil (Brasil)\", \"br\", \"55\" ], [ \"British Indian Ocean Territory\", \"io\", \"246\" ], [ \"British Virgin Islands\", \"vg\", \"1\", 11, [ \"284\" ] ], [ \"Brunei\", \"bn\", \"673\" ], [ \"Bulgaria (България)\", \"bg\", \"359\" ], [ \"Burkina Faso\", \"bf\", \"226\" ], [ \"Burundi (Uburundi)\", \"bi\", \"257\" ], [ \"Cambodia (កម្ពុជា)\", \"kh\", \"855\" ], [ \"Cameroon (Cameroun)\", \"cm\", \"237\" ], [ \"Canada\", \"ca\", \"1\", 1, [ \"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\" ] ], [ \"Cape Verde (Kabu Verdi)\", \"cv\", \"238\" ], [ \"Caribbean Netherlands\", \"bq\", \"599\", 1, [ \"3\", \"4\", \"7\" ] ], [ \"Cayman Islands\", \"ky\", \"1\", 12, [ \"345\" ] ], [ \"Central African Republic (République centrafricaine)\", \"cf\", \"236\" ], [ \"Chad (Tchad)\", \"td\", \"235\" ], [ \"Chile\", \"cl\", \"56\" ], [ \"China (中国)\", \"cn\", \"86\" ], [ \"Christmas Island\", \"cx\", \"61\", 2, [ \"89164\" ] ], [ \"Cocos (Keeling) Islands\", \"cc\", \"61\", 1, [ \"89162\" ] ], [ \"Colombia\", \"co\", \"57\" ], [ \"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\" ], [ \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\" ], [ \"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\" ], [ \"Cook Islands\", \"ck\", \"682\" ], [ \"Costa Rica\", \"cr\", \"506\" ], [ \"Côte d’Ivoire\", \"ci\", \"225\" ], [ \"Croatia (Hrvatska)\", \"hr\", \"385\" ], [ \"Cuba\", \"cu\", \"53\" ], [ \"Curaçao\", \"cw\", \"599\", 0 ], [ \"Cyprus (Κύπρος)\", \"cy\", \"357\" ], [ \"Czech Republic (Česká republika)\", \"cz\", \"420\" ], [ \"Denmark (Danmark)\", \"dk\", \"45\" ], [ \"Djibouti\", \"dj\", \"253\" ], [ \"Dominica\", \"dm\", \"1\", 13, [ \"767\" ] ], [ \"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [ \"809\", \"829\", \"849\" ] ], [ \"Ecuador\", \"ec\", \"593\" ], [ \"Egypt (‫مصر‬‎)\", \"eg\", \"20\" ], [ \"El Salvador\", \"sv\", \"503\" ], [ \"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\" ], [ \"Eritrea\", \"er\", \"291\" ], [ \"Estonia (Eesti)\", \"ee\", \"372\" ], [ \"Eswatini\", \"sz\", \"268\" ], [ \"Ethiopia\", \"et\", \"251\" ], [ \"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\" ], [ \"Faroe Islands (Føroyar)\", \"fo\", \"298\" ], [ \"Fiji\", \"fj\", \"679\" ], [ \"Finland (Suomi)\", \"fi\", \"358\", 0 ], [ \"France\", \"fr\", \"33\" ], [ \"French Guiana (Guyane française)\", \"gf\", \"594\" ], [ \"French Polynesia (Polynésie française)\", \"pf\", \"689\" ], [ \"Gabon\", \"ga\", \"241\" ], [ \"Gambia\", \"gm\", \"220\" ], [ \"Georgia (საქართველო)\", \"ge\", \"995\" ], [ \"Germany (Deutschland)\", \"de\", \"49\" ], [ \"Ghana (Gaana)\", \"gh\", \"233\" ], [ \"Gibraltar\", \"gi\", \"350\" ], [ \"Greece (Ελλάδα)\", \"gr\", \"30\" ], [ \"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\" ], [ \"Grenada\", \"gd\", \"1\", 14, [ \"473\" ] ], [ \"Guadeloupe\", \"gp\", \"590\", 0 ], [ \"Guam\", \"gu\", \"1\", 15, [ \"671\" ] ], [ \"Guatemala\", \"gt\", \"502\" ], [ \"Guernsey\", \"gg\", \"44\", 1, [ \"1481\", \"7781\", \"7839\", \"7911\" ] ], [ \"Guinea (Guinée)\", \"gn\", \"224\" ], [ \"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\" ], [ \"Guyana\", \"gy\", \"592\" ], [ \"Haiti\", \"ht\", \"509\" ], [ \"Honduras\", \"hn\", \"504\" ], [ \"Hong Kong (香港)\", \"hk\", \"852\" ], [ \"Hungary (Magyarország)\", \"hu\", \"36\" ], [ \"Iceland (Ísland)\", \"is\", \"354\" ], [ \"India (भारत)\", \"in\", \"91\" ], [ \"Indonesia\", \"id\", \"62\" ], [ \"Iran (‫ایران‬‎)\", \"ir\", \"98\" ], [ \"Iraq (‫العراق‬‎)\", \"iq\", \"964\" ], [ \"Ireland\", \"ie\", \"353\" ], [ \"Isle of Man\", \"im\", \"44\", 2, [ \"1624\", \"74576\", \"7524\", \"7924\", \"7624\" ] ], [ \"Israel (‫ישראל‬‎)\", \"il\", \"972\" ], [ \"Italy (Italia)\", \"it\", \"39\", 0 ], [ \"Jamaica\", \"jm\", \"1\", 4, [ \"876\", \"658\" ] ], [ \"Japan (日本)\", \"jp\", \"81\" ], [ \"Jersey\", \"je\", \"44\", 3, [ \"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\" ] ], [ \"Jordan (‫الأردن‬‎)\", \"jo\", \"962\" ], [ \"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [ \"33\", \"7\" ] ], [ \"Kenya\", \"ke\", \"254\" ], [ \"Kiribati\", \"ki\", \"686\" ], [ \"Kosovo\", \"xk\", \"383\" ], [ \"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\" ], [ \"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\" ], [ \"Laos (ລາວ)\", \"la\", \"856\" ], [ \"Latvia (Latvija)\", \"lv\", \"371\" ], [ \"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\" ], [ \"Lesotho\", \"ls\", \"266\" ], [ \"Liberia\", \"lr\", \"231\" ], [ \"Libya (‫ليبيا‬‎)\", \"ly\", \"218\" ], [ \"Liechtenstein\", \"li\", \"423\" ], [ \"Lithuania (Lietuva)\", \"lt\", \"370\" ], [ \"Luxembourg\", \"lu\", \"352\" ], [ \"Macau (澳門)\", \"mo\", \"853\" ], [ \"North Macedonia (Македонија)\", \"mk\", \"389\" ], [ \"Madagascar (Madagasikara)\", \"mg\", \"261\" ], [ \"Malawi\", \"mw\", \"265\" ], [ \"Malaysia\", \"my\", \"60\" ], [ \"Maldives\", \"mv\", \"960\" ], [ \"Mali\", \"ml\", \"223\" ], [ \"Malta\", \"mt\", \"356\" ], [ \"Marshall Islands\", \"mh\", \"692\" ], [ \"Martinique\", \"mq\", \"596\" ], [ \"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\" ], [ \"Mauritius (Moris)\", \"mu\", \"230\" ], [ \"Mayotte\", \"yt\", \"262\", 1, [ \"269\", \"639\" ] ], [ \"Mexico (México)\", \"mx\", \"52\" ], [ \"Micronesia\", \"fm\", \"691\" ], [ \"Moldova (Republica Moldova)\", \"md\", \"373\" ], [ \"Monaco\", \"mc\", \"377\" ], [ \"Mongolia (Монгол)\", \"mn\", \"976\" ], [ \"Montenegro (Crna Gora)\", \"me\", \"382\" ], [ \"Montserrat\", \"ms\", \"1\", 16, [ \"664\" ] ], [ \"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0 ], [ \"Mozambique (Moçambique)\", \"mz\", \"258\" ], [ \"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\" ], [ \"Namibia (Namibië)\", \"na\", \"264\" ], [ \"Nauru\", \"nr\", \"674\" ], [ \"Nepal (नेपाल)\", \"np\", \"977\" ], [ \"Netherlands (Nederland)\", \"nl\", \"31\" ], [ \"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\" ], [ \"New Zealand\", \"nz\", \"64\" ], [ \"Nicaragua\", \"ni\", \"505\" ], [ \"Niger (Nijar)\", \"ne\", \"227\" ], [ \"Nigeria\", \"ng\", \"234\" ], [ \"Niue\", \"nu\", \"683\" ], [ \"Norfolk Island\", \"nf\", \"672\" ], [ \"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\" ], [ \"Northern Mariana Islands\", \"mp\", \"1\", 17, [ \"670\" ] ], [ \"Norway (Norge)\", \"no\", \"47\", 0 ], [ \"Oman (‫عُمان‬‎)\", \"om\", \"968\" ], [ \"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\" ], [ \"Palau\", \"pw\", \"680\" ], [ \"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\" ], [ \"Panama (Panamá)\", \"pa\", \"507\" ], [ \"Papua New Guinea\", \"pg\", \"675\" ], [ \"Paraguay\", \"py\", \"595\" ], [ \"Peru (Perú)\", \"pe\", \"51\" ], [ \"Philippines\", \"ph\", \"63\" ], [ \"Poland (Polska)\", \"pl\", \"48\" ], [ \"Portugal\", \"pt\", \"351\" ], [ \"Puerto Rico\", \"pr\", \"1\", 3, [ \"787\", \"939\" ] ], [ \"Qatar (‫قطر‬‎)\", \"qa\", \"974\" ], [ \"Réunion (La Réunion)\", \"re\", \"262\", 0 ], [ \"Romania (România)\", \"ro\", \"40\" ], [ \"Russia (Россия)\", \"ru\", \"7\", 0 ], [ \"Rwanda\", \"rw\", \"250\" ], [ \"Saint Barthélemy\", \"bl\", \"590\", 1 ], [ \"Saint Helena\", \"sh\", \"290\" ], [ \"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [ \"869\" ] ], [ \"Saint Lucia\", \"lc\", \"1\", 19, [ \"758\" ] ], [ \"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2 ], [ \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\" ], [ \"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [ \"784\" ] ], [ \"Samoa\", \"ws\", \"685\" ], [ \"San Marino\", \"sm\", \"378\" ], [ \"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\" ], [ \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\" ], [ \"Senegal (Sénégal)\", \"sn\", \"221\" ], [ \"Serbia (Србија)\", \"rs\", \"381\" ], [ \"Seychelles\", \"sc\", \"248\" ], [ \"Sierra Leone\", \"sl\", \"232\" ], [ \"Singapore\", \"sg\", \"65\" ], [ \"Sint Maarten\", \"sx\", \"1\", 21, [ \"721\" ] ], [ \"Slovakia (Slovensko)\", \"sk\", \"421\" ], [ \"Slovenia (Slovenija)\", \"si\", \"386\" ], [ \"Solomon Islands\", \"sb\", \"677\" ], [ \"Somalia (Soomaaliya)\", \"so\", \"252\" ], [ \"South Africa\", \"za\", \"27\" ], [ \"South Korea (대한민국)\", \"kr\", \"82\" ], [ \"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\" ], [ \"Spain (España)\", \"es\", \"34\" ], [ \"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\" ], [ \"Sudan (‫السودان‬‎)\", \"sd\", \"249\" ], [ \"Suriname\", \"sr\", \"597\" ], [ \"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [ \"79\" ] ], [ \"Sweden (Sverige)\", \"se\", \"46\" ], [ \"Switzerland (Schweiz)\", \"ch\", \"41\" ], [ \"Syria (‫سوريا‬‎)\", \"sy\", \"963\" ], [ \"Taiwan (台灣)\", \"tw\", \"886\" ], [ \"Tajikistan\", \"tj\", \"992\" ], [ \"Tanzania\", \"tz\", \"255\" ], [ \"Thailand (ไทย)\", \"th\", \"66\" ], [ \"Timor-Leste\", \"tl\", \"670\" ], [ \"Togo\", \"tg\", \"228\" ], [ \"Tokelau\", \"tk\", \"690\" ], [ \"Tonga\", \"to\", \"676\" ], [ \"Trinidad and Tobago\", \"tt\", \"1\", 22, [ \"868\" ] ], [ \"Tunisia (‫تونس‬‎)\", \"tn\", \"216\" ], [ \"Turkey (Türkiye)\", \"tr\", \"90\" ], [ \"Turkmenistan\", \"tm\", \"993\" ], [ \"Turks and Caicos Islands\", \"tc\", \"1\", 23, [ \"649\" ] ], [ \"Tuvalu\", \"tv\", \"688\" ], [ \"U.S. Virgin Islands\", \"vi\", \"1\", 24, [ \"340\" ] ], [ \"Uganda\", \"ug\", \"256\" ], [ \"Ukraine (Україна)\", \"ua\", \"380\" ], [ \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\" ], [ \"United Kingdom\", \"gb\", \"44\", 0 ], [ \"United States\", \"us\", \"1\", 0 ], [ \"Uruguay\", \"uy\", \"598\" ], [ \"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\" ], [ \"Vanuatu\", \"vu\", \"678\" ], [ \"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [ \"06698\" ] ], [ \"Venezuela\", \"ve\", \"58\" ], [ \"Vietnam (Việt Nam)\", \"vn\", \"84\" ], [ \"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\" ], [ \"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [ \"5288\", \"5289\" ] ], [ \"Yemen (‫اليمن‬‎)\", \"ye\", \"967\" ], [ \"Zambia\", \"zm\", \"260\" ], [ \"Zimbabwe\", \"zw\", \"263\" ], [ \"Åland Islands\", \"ax\", \"358\", 1, [ \"18\" ] ] ];\n        // loop over all of the countries above, restructuring the data to be objects with named keys\n        for (var i = 0; i < allCountries.length; i++) {\n            var c = allCountries[i];\n            allCountries[i] = {\n                name: c[0],\n                iso2: c[1],\n                dialCode: c[2],\n                priority: c[3] || 0,\n                areaCodes: c[4] || null\n            };\n        }\n        \"use strict\";\n        function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new TypeError(\"Cannot call a class as a function\");\n            }\n        }\n        function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n        }\n        var intlTelInputGlobals = {\n            getInstance: function getInstance(input) {\n                var id = input.getAttribute(\"data-intl-tel-input-id\");\n                return window.intlTelInputGlobals.instances[id];\n            },\n            instances: {},\n            // using a global like this allows us to mock it in the tests\n            documentReady: function documentReady() {\n                return document.readyState === \"complete\";\n            }\n        };\n        if (typeof window === \"object\") window.intlTelInputGlobals = intlTelInputGlobals;\n        // these vars persist through all instances of the plugin\n        var id = 0;\n        var defaults = {\n            // whether or not to allow the dropdown\n            allowDropdown: true,\n            // if there is just a dial code in the input: remove it on blur\n            autoHideDialCode: true,\n            // add a placeholder in the input with an example number for the selected country\n            autoPlaceholder: \"polite\",\n            // modify the parentClass\n            customContainer: \"\",\n            // modify the auto placeholder\n            customPlaceholder: null,\n            // append menu to specified element\n            dropdownContainer: null,\n            // don't display these countries\n            excludeCountries: [],\n            // format the input value during initialisation and on setNumber\n            formatOnDisplay: true,\n            // geoIp lookup function\n            geoIpLookup: null,\n            // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n            hiddenInput: \"\",\n            // initial country\n            initialCountry: \"\",\n            // localized country names e.g. { 'de': 'Deutschland' }\n            localizedCountries: null,\n            // don't insert international dial codes\n            nationalMode: true,\n            // display only these countries\n            onlyCountries: [],\n            // number type to use for placeholders\n            placeholderNumberType: \"MOBILE\",\n            // the countries at the top of the list. defaults to united states and united kingdom\n            preferredCountries: [ \"us\", \"gb\" ],\n            // display the country dial code next to the selected flag so it's not part of the typed number\n            separateDialCode: false,\n            // specify the path to the libphonenumber script to enable validation/formatting\n            utilsScript: \"\"\n        };\n        // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n        var regionlessNanpNumbers = [ \"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\" ];\n        // utility function to iterate over an object. can't use Object.entries or native forEach because\n        // of IE11\n        var forEachProp = function forEachProp(obj, callback) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                callback(keys[i], obj[keys[i]]);\n            }\n        };\n        // run a method on each instance of the plugin\n        var forEachInstance = function forEachInstance(method) {\n            forEachProp(window.intlTelInputGlobals.instances, function(key) {\n                window.intlTelInputGlobals.instances[key][method]();\n            });\n        };\n        // this is our plugin class that we will create an instance of\n        // eslint-disable-next-line no-unused-vars\n        var Iti = /*#__PURE__*/\n        function() {\n            function Iti(input, options) {\n                var _this = this;\n                _classCallCheck(this, Iti);\n                this.id = id++;\n                this.telInput = input;\n                this.activeItem = null;\n                this.highlightedItem = null;\n                // process specified options / defaults\n                // alternative to Object.assign, which isn't supported by IE11\n                var customOptions = options || {};\n                this.options = {};\n                forEachProp(defaults, function(key, value) {\n                    _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n                });\n                this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n            }\n            _createClass(Iti, [ {\n                key: \"_init\",\n                value: function _init() {\n                    var _this2 = this;\n                    // if in nationalMode, disable options relating to dial codes\n                    if (this.options.nationalMode) this.options.autoHideDialCode = false;\n                    // if separateDialCode then doesn't make sense to A) insert dial code into input\n                    // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n                    // dial code next to them)\n                    if (this.options.separateDialCode) {\n                        this.options.autoHideDialCode = this.options.nationalMode = false;\n                    }\n                    // we cannot just test screen size as some smartphones/website meta tags will report desktop\n                    // resolutions\n                    // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n                    // rest of these declarations\n                    // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n                    this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    if (this.isMobile) {\n                        // trigger the mobile dropdown css\n                        document.body.classList.add(\"iti-mobile\");\n                        // on mobile, we want a full screen dropdown, so we must append it to the body\n                        if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n                    }\n                    // these promises get resolved when their individual requests complete\n                    // this way the dev can do something like iti.promise.then(...) to know when all requests are\n                    // complete\n                    if (typeof Promise !== \"undefined\") {\n                        var autoCountryPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveAutoCountryPromise = resolve;\n                            _this2.rejectAutoCountryPromise = reject;\n                        });\n                        var utilsScriptPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveUtilsScriptPromise = resolve;\n                            _this2.rejectUtilsScriptPromise = reject;\n                        });\n                        this.promise = Promise.all([ autoCountryPromise, utilsScriptPromise ]);\n                    } else {\n                        // prevent errors when Promise doesn't exist\n                        this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {};\n                        this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {};\n                    }\n                    // in various situations there could be no country selected initially, but we need to be able\n                    // to assume this variable exists\n                    this.selectedCountryData = {};\n                    // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n                    this._processCountryData();\n                    // generate the markup\n                    this._generateMarkup();\n                    // set the initial state of the input value and the selected flag\n                    this._setInitialState();\n                    // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n                    this._initListeners();\n                    // utils script, and auto country\n                    this._initRequests();\n                }\n            }, {\n                key: \"_processCountryData\",\n                value: function _processCountryData() {\n                    // process onlyCountries or excludeCountries array if present\n                    this._processAllCountries();\n                    // process the countryCodes map\n                    this._processCountryCodes();\n                    // process the preferredCountries\n                    this._processPreferredCountries();\n                    // translate countries according to localizedCountries option\n                    if (this.options.localizedCountries) this._translateCountriesByLocale();\n                    // sort countries by name\n                    if (this.options.onlyCountries.length || this.options.localizedCountries) {\n                        this.countries.sort(this._countryNameSort);\n                    }\n                }\n            }, {\n                key: \"_addCountryCode\",\n                value: function _addCountryCode(iso2, countryCode, priority) {\n                    if (countryCode.length > this.countryCodeMaxLen) {\n                        this.countryCodeMaxLen = countryCode.length;\n                    }\n                    if (!this.countryCodes.hasOwnProperty(countryCode)) {\n                        this.countryCodes[countryCode] = [];\n                    }\n                    // bail if we already have this country for this countryCode\n                    for (var i = 0; i < this.countryCodes[countryCode].length; i++) {\n                        if (this.countryCodes[countryCode][i] === iso2) return;\n                    }\n                    // check for undefined as 0 is falsy\n                    var index = priority !== undefined ? priority : this.countryCodes[countryCode].length;\n                    this.countryCodes[countryCode][index] = iso2;\n                }\n            }, {\n                key: \"_processAllCountries\",\n                value: function _processAllCountries() {\n                    if (this.options.onlyCountries.length) {\n                        var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n                        });\n                    } else if (this.options.excludeCountries.length) {\n                        var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                        });\n                    } else {\n                        this.countries = allCountries;\n                    }\n                }\n            }, {\n                key: \"_translateCountriesByLocale\",\n                value: function _translateCountriesByLocale() {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var iso = this.countries[i].iso2.toLowerCase();\n                        if (this.options.localizedCountries.hasOwnProperty(iso)) {\n                            this.countries[i].name = this.options.localizedCountries[iso];\n                        }\n                    }\n                }\n            }, {\n                key: \"_countryNameSort\",\n                value: function _countryNameSort(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n            }, {\n                key: \"_processCountryCodes\",\n                value: function _processCountryCodes() {\n                    this.countryCodeMaxLen = 0;\n                    // here we store just dial codes\n                    this.dialCodes = {};\n                    // here we store \"country codes\" (both dial codes and their area codes)\n                    this.countryCodes = {};\n                    // first: add dial codes\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var c = this.countries[i];\n                        if (!this.dialCodes[c.dialCode]) this.dialCodes[c.dialCode] = true;\n                        this._addCountryCode(c.iso2, c.dialCode, c.priority);\n                    }\n                    // next: add area codes\n                    // this is a second loop over countries, to make sure we have all of the \"root\" countries\n                    // already in the map, so that we can access them, as each time we add an area code substring\n                    // to the map, we also need to include the \"root\" country's code, as that also matches\n                    for (var _i = 0; _i < this.countries.length; _i++) {\n                        var _c = this.countries[_i];\n                        // area codes\n                        if (_c.areaCodes) {\n                            var rootCountryCode = this.countryCodes[_c.dialCode][0];\n                            // for each area code\n                            for (var j = 0; j < _c.areaCodes.length; j++) {\n                                var areaCode = _c.areaCodes[j];\n                                // for each digit in the area code to add all partial matches as well\n                                for (var k = 1; k < areaCode.length; k++) {\n                                    var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                                    // start with the root country, as that also matches this dial code\n                                    this._addCountryCode(rootCountryCode, partialDialCode);\n                                    this._addCountryCode(_c.iso2, partialDialCode);\n                                }\n                                // add the full area code\n                                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: \"_processPreferredCountries\",\n                value: function _processPreferredCountries() {\n                    this.preferredCountries = [];\n                    for (var i = 0; i < this.options.preferredCountries.length; i++) {\n                        var countryCode = this.options.preferredCountries[i].toLowerCase();\n                        var countryData = this._getCountryData(countryCode, false, true);\n                        if (countryData) this.preferredCountries.push(countryData);\n                    }\n                }\n            }, {\n                key: \"_createEl\",\n                value: function _createEl(name, attrs, container) {\n                    var el = document.createElement(name);\n                    if (attrs) forEachProp(attrs, function(key, value) {\n                        return el.setAttribute(key, value);\n                    });\n                    if (container) container.appendChild(el);\n                    return el;\n                }\n            }, {\n                key: \"_generateMarkup\",\n                value: function _generateMarkup() {\n                    // if autocomplete does not exist on the element and its form, then\n                    // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n                    // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n                    // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n                    if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\n                        this.telInput.setAttribute(\"autocomplete\", \"off\");\n                    }\n                    // containers (mostly for positioning)\n                    var parentClass = \"iti\";\n                    if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n                    if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n                    if (this.options.customContainer) {\n                        parentClass += \" \";\n                        parentClass += this.options.customContainer;\n                    }\n                    var wrapper = this._createEl(\"div\", {\n                        \"class\": parentClass\n                    });\n                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n                    this.flagsContainer = this._createEl(\"div\", {\n                        \"class\": \"iti__flag-container\"\n                    }, wrapper);\n                    wrapper.appendChild(this.telInput);\n                    // selected flag (displayed to left of input)\n                    this.selectedFlag = this._createEl(\"div\", {\n                        \"class\": \"iti__selected-flag\",\n                        role: \"combobox\",\n                        \"aria-controls\": \"iti-\".concat(this.id, \"__country-listbox\"),\n                        \"aria-owns\": \"iti-\".concat(this.id, \"__country-listbox\"),\n                        \"aria-expanded\": \"false\"\n                    }, this.flagsContainer);\n                    this.selectedFlagInner = this._createEl(\"div\", {\n                        \"class\": \"iti__flag\"\n                    }, this.selectedFlag);\n                    if (this.options.separateDialCode) {\n                        this.selectedDialCode = this._createEl(\"div\", {\n                            \"class\": \"iti__selected-dial-code\"\n                        }, this.selectedFlag);\n                    }\n                    if (this.options.allowDropdown) {\n                        // make element focusable and tab navigable\n                        this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n                        this.dropdownArrow = this._createEl(\"div\", {\n                            \"class\": \"iti__arrow\"\n                        }, this.selectedFlag);\n                        // country dropdown: preferred countries, then divider, then all countries\n                        this.countryList = this._createEl(\"ul\", {\n                            \"class\": \"iti__country-list iti__hide\",\n                            id: \"iti-\".concat(this.id, \"__country-listbox\"),\n                            role: \"listbox\",\n                            \"aria-label\": \"List of countries\"\n                        });\n                        if (this.preferredCountries.length) {\n                            this._appendListItems(this.preferredCountries, \"iti__preferred\", true);\n                            this._createEl(\"li\", {\n                                \"class\": \"iti__divider\",\n                                role: \"separator\",\n                                \"aria-disabled\": \"true\"\n                            }, this.countryList);\n                        }\n                        this._appendListItems(this.countries, \"iti__standard\");\n                        // create dropdownContainer markup\n                        if (this.options.dropdownContainer) {\n                            this.dropdown = this._createEl(\"div\", {\n                                \"class\": \"iti iti--container\"\n                            });\n                            this.dropdown.appendChild(this.countryList);\n                        } else {\n                            this.flagsContainer.appendChild(this.countryList);\n                        }\n                    }\n                    if (this.options.hiddenInput) {\n                        var hiddenInputName = this.options.hiddenInput;\n                        var name = this.telInput.getAttribute(\"name\");\n                        if (name) {\n                            var i = name.lastIndexOf(\"[\");\n                            // if input name contains square brackets, then give the hidden input the same name,\n                            // replacing the contents of the last set of brackets with the given hiddenInput name\n                            if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n                        }\n                        this.hiddenInput = this._createEl(\"input\", {\n                            type: \"hidden\",\n                            name: hiddenInputName\n                        });\n                        wrapper.appendChild(this.hiddenInput);\n                    }\n                }\n            }, {\n                key: \"_appendListItems\",\n                value: function _appendListItems(countries, className, preferred) {\n                    // we create so many DOM elements, it is faster to build a temp string\n                    // and then add everything to the DOM in one go at the end\n                    var tmp = \"\";\n                    // for each country\n                    for (var i = 0; i < countries.length; i++) {\n                        var c = countries[i];\n                        var idSuffix = preferred ? \"-preferred\" : \"\";\n                        // open the list item\n                        tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-\").concat(this.id, \"__item-\").concat(c.iso2).concat(idSuffix, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"' aria-selected='false'>\");\n                        // add the flag\n                        tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n                        // and the country name and dial code\n                        tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n                        tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n                        // close the list item\n                        tmp += \"</li>\";\n                    }\n                    this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n                }\n            }, {\n                key: \"_setInitialState\",\n                value: function _setInitialState() {\n                    // fix firefox bug: when first load page (with input with value set to number with intl dial\n                    // code) and initialising plugin removes the dial code from the input, then refresh page,\n                    // and we try to init plugin again but this time on number without dial code so get grey flag\n                    var attributeValue = this.telInput.getAttribute(\"value\");\n                    var inputValue = this.telInput.value;\n                    var useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\n                    var val = useAttribute ? attributeValue : inputValue;\n                    var dialCode = this._getDialCode(val);\n                    var isRegionlessNanp = this._isRegionlessNanp(val);\n                    var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;\n                    // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n                    // flag, else fall back to the default country\n                    if (dialCode && !isRegionlessNanp) {\n                        this._updateFlagFromNumber(val);\n                    } else if (initialCountry !== \"auto\") {\n                        // see if we should select a flag\n                        if (initialCountry) {\n                            this._setFlag(initialCountry.toLowerCase());\n                        } else {\n                            if (dialCode && isRegionlessNanp) {\n                                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                                this._setFlag(\"us\");\n                            } else {\n                                // no dial code and no initialCountry, so default to first in list\n                                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                                if (!val) {\n                                    this._setFlag(this.defaultCountry);\n                                }\n                            }\n                        }\n                        // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n                        if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n                            this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n                        }\n                    }\n                    // NOTE: if initialCountry is set to auto, that will be handled separately\n                    // format - note this wont be run after _updateDialCode as that's only called if no val\n                    if (val) this._updateValFromNumber(val);\n                }\n            }, {\n                key: \"_initListeners\",\n                value: function _initListeners() {\n                    this._initKeyListeners();\n                    if (this.options.autoHideDialCode) this._initBlurListeners();\n                    if (this.options.allowDropdown) this._initDropdownListeners();\n                    if (this.hiddenInput) this._initHiddenInputListener();\n                }\n            }, {\n                key: \"_initHiddenInputListener\",\n                value: function _initHiddenInputListener() {\n                    var _this3 = this;\n                    this._handleHiddenInputSubmit = function() {\n                        _this3.hiddenInput.value = _this3.getNumber();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n                }\n            }, {\n                key: \"_getClosestLabel\",\n                value: function _getClosestLabel() {\n                    var el = this.telInput;\n                    while (el && el.tagName !== \"LABEL\") {\n                        el = el.parentNode;\n                    }\n                    return el;\n                }\n            }, {\n                key: \"_initDropdownListeners\",\n                value: function _initDropdownListeners() {\n                    var _this4 = this;\n                    // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n                    // open the dropdown would then automatically trigger a 2nd click on the input which would\n                    // close it again\n                    this._handleLabelClick = function(e) {\n                        // if the dropdown is closed, then focus the input, else ignore the click\n                        if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus(); else e.preventDefault();\n                    };\n                    var label = this._getClosestLabel();\n                    if (label) label.addEventListener(\"click\", this._handleLabelClick);\n                    // toggle country dropdown on click\n                    this._handleClickSelectedFlag = function() {\n                        // only intercept this event if we're opening the dropdown\n                        // else let it bubble up to the top (\"click-off-to-close\" listener)\n                        // we cannot just stopPropagation as it may be needed to close another instance\n                        if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n                            _this4._showDropdown();\n                        }\n                    };\n                    this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n                    // open dropdown list if currently focused\n                    this._handleFlagsContainerKeydown = function(e) {\n                        var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n                        if (isDropdownHidden && [ \"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\" ].indexOf(e.key) !== -1) {\n                            // prevent form from being submitted if \"ENTER\" was pressed\n                            e.preventDefault();\n                            // prevent event from being handled again by document\n                            e.stopPropagation();\n                            _this4._showDropdown();\n                        }\n                        // allow navigation from dropdown to input on TAB\n                        if (e.key === \"Tab\") _this4._closeDropdown();\n                    };\n                    this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                }\n            }, {\n                key: \"_initRequests\",\n                value: function _initRequests() {\n                    var _this5 = this;\n                    // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n                    if (this.options.utilsScript && !window.intlTelInputUtils) {\n                        // if the plugin is being initialised after the window.load event has already been fired\n                        if (window.intlTelInputGlobals.documentReady()) {\n                            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n                        } else {\n                            // wait until the load event so we don't block any other requests e.g. the flags image\n                            window.addEventListener(\"load\", function() {\n                                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n                            });\n                        }\n                    } else this.resolveUtilsScriptPromise();\n                    if (this.options.initialCountry === \"auto\") this._loadAutoCountry(); else this.resolveAutoCountryPromise();\n                }\n            }, {\n                key: \"_loadAutoCountry\",\n                value: function _loadAutoCountry() {\n                    // 3 options:\n                    // 1) already loaded (we're done)\n                    // 2) not already started loading (start)\n                    // 3) already started loading (do nothing - just wait for loading callback to fire)\n                    if (window.intlTelInputGlobals.autoCountry) {\n                        this.handleAutoCountry();\n                    } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n                        // don't do this twice!\n                        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n                        if (typeof this.options.geoIpLookup === \"function\") {\n                            this.options.geoIpLookup(function(countryCode) {\n                                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                                // tell all instances the auto country is ready\n                                // TODO: this should just be the current instances\n                                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                                // setTimeout means that the current thread of execution will finish before executing\n                                // this, which allows the plugin to finish initialising.\n                                setTimeout(function() {\n                                    return forEachInstance(\"handleAutoCountry\");\n                                });\n                            }, function() {\n                                return forEachInstance(\"rejectAutoCountryPromise\");\n                            });\n                        }\n                    }\n                }\n            }, {\n                key: \"_initKeyListeners\",\n                value: function _initKeyListeners() {\n                    var _this6 = this;\n                    // update flag on keyup\n                    this._handleKeyupEvent = function() {\n                        if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n                            _this6._triggerCountryChange();\n                        }\n                    };\n                    this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n                    // update flag on cut/paste events (now supported in all major browsers)\n                    this._handleClipboardEvent = function() {\n                        // hack because \"paste\" event is fired before input is updated\n                        setTimeout(_this6._handleKeyupEvent);\n                    };\n                    this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n                }\n            }, {\n                key: \"_cap\",\n                value: function _cap(number) {\n                    var max = this.telInput.getAttribute(\"maxlength\");\n                    return max && number.length > max ? number.substr(0, max) : number;\n                }\n            }, {\n                key: \"_initBlurListeners\",\n                value: function _initBlurListeners() {\n                    var _this7 = this;\n                    // on blur or form submit: if just a dial code then remove it\n                    this._handleSubmitOrBlurEvent = function() {\n                        _this7._removeEmptyDialCode();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                    this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                }\n            }, {\n                key: \"_removeEmptyDialCode\",\n                value: function _removeEmptyDialCode() {\n                    if (this.telInput.value.charAt(0) === \"+\") {\n                        var numeric = this._getNumeric(this.telInput.value);\n                        // if just a plus, or if just a dial code\n                        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n                            this.telInput.value = \"\";\n                        }\n                    }\n                }\n            }, {\n                key: \"_getNumeric\",\n                value: function _getNumeric(s) {\n                    return s.replace(/\\D/g, \"\");\n                }\n            }, {\n                key: \"_trigger\",\n                value: function _trigger(name) {\n                    // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n                    var e = document.createEvent(\"Event\");\n                    e.initEvent(name, true, true);\n                    // can bubble, and is cancellable\n                    this.telInput.dispatchEvent(e);\n                }\n            }, {\n                key: \"_showDropdown\",\n                value: function _showDropdown() {\n                    this.countryList.classList.remove(\"iti__hide\");\n                    this.selectedFlag.setAttribute(\"aria-expanded\", \"true\");\n                    this._setDropdownPosition();\n                    // update highlighting and scroll to active list item\n                    if (this.activeItem) {\n                        this._highlightListItem(this.activeItem, false);\n                        this._scrollTo(this.activeItem, true);\n                    }\n                    // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n                    this._bindDropdownListeners();\n                    // update the arrow\n                    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n                    this._trigger(\"open:countrydropdown\");\n                }\n            }, {\n                key: \"_toggleClass\",\n                value: function _toggleClass(el, className, shouldHaveClass) {\n                    if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className); else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n                }\n            }, {\n                key: \"_setDropdownPosition\",\n                value: function _setDropdownPosition() {\n                    var _this8 = this;\n                    if (this.options.dropdownContainer) {\n                        this.options.dropdownContainer.appendChild(this.dropdown);\n                    }\n                    if (!this.isMobile) {\n                        var pos = this.telInput.getBoundingClientRect();\n                        // windowTop from https://stackoverflow.com/a/14384091/217866\n                        var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                        var inputTop = pos.top + windowTop;\n                        var dropdownHeight = this.countryList.offsetHeight;\n                        // dropdownFitsBelow = (dropdownBottom < windowBottom)\n                        var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n                        var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n                        // by default, the dropdown will be below the input. If we want to position it above the\n                        // input, we add the dropup class.\n                        this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n                        // if dropdownContainer is enabled, calculate postion\n                        if (this.options.dropdownContainer) {\n                            // by default the dropdown will be directly over the input because it's not in the flow.\n                            // If we want to position it below, we need to add some extra top value.\n                            var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n                            // calculate placement\n                            this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n                            this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n                            // close menu on window scroll\n                            this._handleWindowScroll = function() {\n                                return _this8._closeDropdown();\n                            };\n                            window.addEventListener(\"scroll\", this._handleWindowScroll);\n                        }\n                    }\n                }\n            }, {\n                key: \"_getClosestListItem\",\n                value: function _getClosestListItem(target) {\n                    var el = target;\n                    while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n                        el = el.parentNode;\n                    }\n                    // if we reached the countryList element, then return null\n                    return el === this.countryList ? null : el;\n                }\n            }, {\n                key: \"_bindDropdownListeners\",\n                value: function _bindDropdownListeners() {\n                    var _this9 = this;\n                    // when mouse over a list item, just highlight that one\n                    // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n                    this._handleMouseoverCountryList = function(e) {\n                        // handle event delegation, as we're listening for this event on the countryList\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._highlightListItem(listItem, false);\n                    };\n                    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    // listen for country selection\n                    this._handleClickCountryList = function(e) {\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._selectListItem(listItem);\n                    };\n                    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n                    // click off to close\n                    // (except when this initial opening click is bubbling up)\n                    // we cannot just stopPropagation as it may be needed to close another instance\n                    var isOpening = true;\n                    this._handleClickOffToClose = function() {\n                        if (!isOpening) _this9._closeDropdown();\n                        isOpening = false;\n                    };\n                    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n                    // listen for up/down scrolling, enter to select, or letters to jump to country name.\n                    // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n                    // just hit down and hold it to scroll down (no keyup event).\n                    // listen on the document because that's where key events are triggered if no input has focus\n                    var query = \"\";\n                    var queryTimer = null;\n                    this._handleKeydownOnDropdown = function(e) {\n                        // prevent down key from scrolling the whole page,\n                        // and enter key from submitting a form etc\n                        e.preventDefault();\n                        // up and down to navigate\n                        if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key); else if (e.key === \"Enter\") _this9._handleEnterKey(); else if (e.key === \"Escape\") _this9._closeDropdown(); else if (/^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\n                            // jump to countries that start with the query string\n                            if (queryTimer) clearTimeout(queryTimer);\n                            query += e.key.toLowerCase();\n                            _this9._searchForCountry(query);\n                            // if the timer hits 1 second, reset the query\n                            queryTimer = setTimeout(function() {\n                                query = \"\";\n                            }, 1e3);\n                        }\n                    };\n                    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                }\n            }, {\n                key: \"_handleUpDownKey\",\n                value: function _handleUpDownKey(key) {\n                    var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n                    if (next) {\n                        // skip the divider\n                        if (next.classList.contains(\"iti__divider\")) {\n                            next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n                        }\n                        this._highlightListItem(next, true);\n                    }\n                }\n            }, {\n                key: \"_handleEnterKey\",\n                value: function _handleEnterKey() {\n                    if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n                }\n            }, {\n                key: \"_searchForCountry\",\n                value: function _searchForCountry(query) {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        if (this._startsWith(this.countries[i].name, query)) {\n                            var listItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(this.countries[i].iso2));\n                            // update highlighting and scroll\n                            this._highlightListItem(listItem, false);\n                            this._scrollTo(listItem, true);\n                            break;\n                        }\n                    }\n                }\n            }, {\n                key: \"_startsWith\",\n                value: function _startsWith(a, b) {\n                    return a.substr(0, b.length).toLowerCase() === b;\n                }\n            }, {\n                key: \"_updateValFromNumber\",\n                value: function _updateValFromNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n                        var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n                        var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n                        var format = useNational ? NATIONAL : INTERNATIONAL;\n                        number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n                    }\n                    number = this._beforeSetNumber(number);\n                    this.telInput.value = number;\n                }\n            }, {\n                key: \"_updateFlagFromNumber\",\n                value: function _updateFlagFromNumber(originalNumber) {\n                    // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n                    // with a +1 so _getDialCode will be able to extract the area code\n                    // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n                    // from the number), that means we're initialising the plugin with a number that already has a\n                    // dial code, so fine to ignore this bit\n                    var number = originalNumber;\n                    var selectedDialCode = this.selectedCountryData.dialCode;\n                    var isNanp = selectedDialCode === \"1\";\n                    if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n                        if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n                        number = \"+\".concat(number);\n                    }\n                    // update flag if user types area code for another country\n                    if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n                        number = \"+\".concat(selectedDialCode).concat(number);\n                    }\n                    // try and extract valid dial code from input\n                    var dialCode = this._getDialCode(number, true);\n                    var numeric = this._getNumeric(number);\n                    var countryCode = null;\n                    if (dialCode) {\n                        var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n                        // check if the right country is already selected. this should be false if the number is\n                        // longer than the matched dial code because in this case we need to make sure that if\n                        // there are multiple country matches, that the first one is selected (note: we could\n                        // just check that here, but it requires the same loop that we already have later)\n                        var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n                        var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n                        // only update the flag if:\n                        // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n                        // AND\n                        // B) the right country is not already selected\n                        if (!isRegionlessNanpNumber && !alreadySelected) {\n                            // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n                            // non-empty index\n                            for (var j = 0; j < countryCodes.length; j++) {\n                                if (countryCodes[j]) {\n                                    countryCode = countryCodes[j];\n                                    break;\n                                }\n                            }\n                        }\n                    } else if (number.charAt(0) === \"+\" && numeric.length) {\n                        // invalid dial code, so empty\n                        // Note: use getNumeric here because the number has not been formatted yet, so could contain\n                        // bad chars\n                        countryCode = \"\";\n                    } else if (!number || number === \"+\") {\n                        // empty, or just a plus, so default\n                        countryCode = this.defaultCountry;\n                    }\n                    if (countryCode !== null) {\n                        return this._setFlag(countryCode);\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_isRegionlessNanp\",\n                value: function _isRegionlessNanp(number) {\n                    var numeric = this._getNumeric(number);\n                    if (numeric.charAt(0) === \"1\") {\n                        var areaCode = numeric.substr(1, 3);\n                        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_highlightListItem\",\n                value: function _highlightListItem(listItem, shouldFocus) {\n                    var prevItem = this.highlightedItem;\n                    if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n                    this.highlightedItem = listItem;\n                    this.highlightedItem.classList.add(\"iti__highlight\");\n                    if (shouldFocus) this.highlightedItem.focus();\n                }\n            }, {\n                key: \"_getCountryData\",\n                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n                    var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n                    for (var i = 0; i < countryList.length; i++) {\n                        if (countryList[i].iso2 === countryCode) {\n                            return countryList[i];\n                        }\n                    }\n                    if (allowFail) {\n                        return null;\n                    }\n                    throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n                }\n            }, {\n                key: \"_setFlag\",\n                value: function _setFlag(countryCode) {\n                    var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n                    // do this first as it will throw an error and stop if countryCode is invalid\n                    this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n                    // update the defaultCountry - we only need the iso2 from now on, so just store that\n                    if (this.selectedCountryData.iso2) {\n                        this.defaultCountry = this.selectedCountryData.iso2;\n                    }\n                    this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n                    // update the selected country's title attribute\n                    var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n                    this.selectedFlag.setAttribute(\"title\", title);\n                    if (this.options.separateDialCode) {\n                        var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n                        this.selectedDialCode.innerHTML = dialCode;\n                        // offsetWidth is zero if input is in a hidden container during initialisation\n                        var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n                        // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n                        this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n                    }\n                    // and the input's placeholder\n                    this._updatePlaceholder();\n                    // update the active list item\n                    if (this.options.allowDropdown) {\n                        var prevItem = this.activeItem;\n                        if (prevItem) {\n                            prevItem.classList.remove(\"iti__active\");\n                            prevItem.setAttribute(\"aria-selected\", \"false\");\n                        }\n                        if (countryCode) {\n                            // check if there is a preferred item first, else fall back to standard\n                            var nextItem = this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode, \"-preferred\")) || this.countryList.querySelector(\"#iti-\".concat(this.id, \"__item-\").concat(countryCode));\n                            nextItem.setAttribute(\"aria-selected\", \"true\");\n                            nextItem.classList.add(\"iti__active\");\n                            this.activeItem = nextItem;\n                            this.selectedFlag.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n                        }\n                    }\n                    // return if the flag has changed or not\n                    return prevCountry.iso2 !== countryCode;\n                }\n            }, {\n                key: \"_getHiddenSelectedFlagWidth\",\n                value: function _getHiddenSelectedFlagWidth() {\n                    // to get the right styling to apply, all we need is a shallow clone of the container,\n                    // and then to inject a deep clone of the selectedFlag element\n                    var containerClone = this.telInput.parentNode.cloneNode();\n                    containerClone.style.visibility = \"hidden\";\n                    document.body.appendChild(containerClone);\n                    var flagsContainerClone = this.flagsContainer.cloneNode();\n                    containerClone.appendChild(flagsContainerClone);\n                    var selectedFlagClone = this.selectedFlag.cloneNode(true);\n                    flagsContainerClone.appendChild(selectedFlagClone);\n                    var width = selectedFlagClone.offsetWidth;\n                    containerClone.parentNode.removeChild(containerClone);\n                    return width;\n                }\n            }, {\n                key: \"_updatePlaceholder\",\n                value: function _updatePlaceholder() {\n                    var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n                    if (window.intlTelInputUtils && shouldSetPlaceholder) {\n                        var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n                        var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n                        placeholder = this._beforeSetNumber(placeholder);\n                        if (typeof this.options.customPlaceholder === \"function\") {\n                            placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n                        }\n                        this.telInput.setAttribute(\"placeholder\", placeholder);\n                    }\n                }\n            }, {\n                key: \"_selectListItem\",\n                value: function _selectListItem(listItem) {\n                    // update selected flag and active list item\n                    var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n                    this._closeDropdown();\n                    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n                    // focus the input\n                    this.telInput.focus();\n                    // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n                    // inserting dial code), who try to put the cursor at the beginning the first time\n                    var len = this.telInput.value.length;\n                    this.telInput.setSelectionRange(len, len);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"_closeDropdown\",\n                value: function _closeDropdown() {\n                    this.countryList.classList.add(\"iti__hide\");\n                    this.selectedFlag.setAttribute(\"aria-expanded\", \"false\");\n                    // update the arrow\n                    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n                    // unbind key events\n                    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n                    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n                    // remove menu from container\n                    if (this.options.dropdownContainer) {\n                        if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n                        if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n                    }\n                    this._trigger(\"close:countrydropdown\");\n                }\n            }, {\n                key: \"_scrollTo\",\n                value: function _scrollTo(element, middle) {\n                    var container = this.countryList;\n                    // windowTop from https://stackoverflow.com/a/14384091/217866\n                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                    var containerHeight = container.offsetHeight;\n                    var containerTop = container.getBoundingClientRect().top + windowTop;\n                    var containerBottom = containerTop + containerHeight;\n                    var elementHeight = element.offsetHeight;\n                    var elementTop = element.getBoundingClientRect().top + windowTop;\n                    var elementBottom = elementTop + elementHeight;\n                    var newScrollTop = elementTop - containerTop + container.scrollTop;\n                    var middleOffset = containerHeight / 2 - elementHeight / 2;\n                    if (elementTop < containerTop) {\n                        // scroll up\n                        if (middle) newScrollTop -= middleOffset;\n                        container.scrollTop = newScrollTop;\n                    } else if (elementBottom > containerBottom) {\n                        // scroll down\n                        if (middle) newScrollTop += middleOffset;\n                        var heightDifference = containerHeight - elementHeight;\n                        container.scrollTop = newScrollTop - heightDifference;\n                    }\n                }\n            }, {\n                key: \"_updateDialCode\",\n                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n                    var inputVal = this.telInput.value;\n                    // save having to pass this every time\n                    var newDialCode = \"+\".concat(newDialCodeBare);\n                    var newNumber;\n                    if (inputVal.charAt(0) === \"+\") {\n                        // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n                        var prevDialCode = this._getDialCode(inputVal);\n                        if (prevDialCode) {\n                            // current number contains a valid dial code, so replace it\n                            newNumber = inputVal.replace(prevDialCode, newDialCode);\n                        } else {\n                            // current number contains an invalid dial code, so ditch it\n                            // (no way to determine where the invalid dial code ends and the rest of the number begins)\n                            newNumber = newDialCode;\n                        }\n                    } else if (this.options.nationalMode || this.options.separateDialCode) {\n                        // don't do anything\n                        return;\n                    } else {\n                        // nationalMode is disabled\n                        if (inputVal) {\n                            // there is an existing value with no dial code: prefix the new dial code\n                            newNumber = newDialCode + inputVal;\n                        } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n                            // no existing value and either they've just selected a list item, or autoHideDialCode is\n                            // disabled: insert new dial code\n                            newNumber = newDialCode;\n                        } else {\n                            return;\n                        }\n                    }\n                    this.telInput.value = newNumber;\n                }\n            }, {\n                key: \"_getDialCode\",\n                value: function _getDialCode(number, includeAreaCode) {\n                    var dialCode = \"\";\n                    // only interested in international numbers (starting with a plus)\n                    if (number.charAt(0) === \"+\") {\n                        var numericChars = \"\";\n                        // iterate over chars\n                        for (var i = 0; i < number.length; i++) {\n                            var c = number.charAt(i);\n                            // if char is number (https://stackoverflow.com/a/8935649/217866)\n                            if (!isNaN(parseInt(c, 10))) {\n                                numericChars += c;\n                                // if current numericChars make a valid dial code\n                                if (includeAreaCode) {\n                                    if (this.countryCodes[numericChars]) {\n                                        // store the actual raw string (useful for matching later)\n                                        dialCode = number.substr(0, i + 1);\n                                    }\n                                } else {\n                                    if (this.dialCodes[numericChars]) {\n                                        dialCode = number.substr(0, i + 1);\n                                        // if we're just looking for a dial code, we can break as soon as we find one\n                                        break;\n                                    }\n                                }\n                                // stop searching as soon as we can - in this case when we hit max len\n                                if (numericChars.length === this.countryCodeMaxLen) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return dialCode;\n                }\n            }, {\n                key: \"_getFullNumber\",\n                value: function _getFullNumber() {\n                    var val = this.telInput.value.trim();\n                    var dialCode = this.selectedCountryData.dialCode;\n                    var prefix;\n                    var numericVal = this._getNumeric(val);\n                    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n                        // when using separateDialCode, it is visible so is effectively part of the typed number\n                        prefix = \"+\".concat(dialCode);\n                    } else {\n                        prefix = \"\";\n                    }\n                    return prefix + val;\n                }\n            }, {\n                key: \"_beforeSetNumber\",\n                value: function _beforeSetNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.separateDialCode) {\n                        var dialCode = this._getDialCode(number);\n                        // if there is a valid dial code\n                        if (dialCode) {\n                            // in case _getDialCode returned an area code as well\n                            dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n                            // a lot of numbers will have a space separating the dial code and the main number, and\n                            // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n                            // rid of it\n                            // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n                            var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n                            number = number.substr(start);\n                        }\n                    }\n                    return this._cap(number);\n                }\n            }, {\n                key: \"_triggerCountryChange\",\n                value: function _triggerCountryChange() {\n                    this._trigger(\"countrychange\");\n                }\n            }, {\n                key: \"handleAutoCountry\",\n                value: function handleAutoCountry() {\n                    if (this.options.initialCountry === \"auto\") {\n                        // we must set this even if there is an initial val in the input: in case the initial val is\n                        // invalid and they delete it - they should see their auto country\n                        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n                        // if there's no initial value in the input, then update the flag\n                        if (!this.telInput.value) {\n                            this.setCountry(this.defaultCountry);\n                        }\n                        this.resolveAutoCountryPromise();\n                    }\n                }\n            }, {\n                key: \"handleUtils\",\n                value: function handleUtils() {\n                    // if the request was successful\n                    if (window.intlTelInputUtils) {\n                        // if there's an initial value in the input, then format it\n                        if (this.telInput.value) {\n                            this._updateValFromNumber(this.telInput.value);\n                        }\n                        this._updatePlaceholder();\n                    }\n                    this.resolveUtilsScriptPromise();\n                }\n            }, {\n                key: \"destroy\",\n                value: function destroy() {\n                    var form = this.telInput.form;\n                    if (this.options.allowDropdown) {\n                        // make sure the dropdown is closed (and unbind listeners)\n                        this._closeDropdown();\n                        this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n                        this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                        // label click hack\n                        var label = this._getClosestLabel();\n                        if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n                    }\n                    // unbind hiddenInput listeners\n                    if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n                    // unbind autoHideDialCode listeners\n                    if (this.options.autoHideDialCode) {\n                        if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                        this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                    }\n                    // unbind key events, and cut/paste events\n                    this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n                    this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n                    // remove attribute of id instance: data-intl-tel-input-id\n                    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n                    // remove markup (but leave the original input)\n                    var wrapper = this.telInput.parentNode;\n                    wrapper.parentNode.insertBefore(this.telInput, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                    delete window.intlTelInputGlobals.instances[this.id];\n                }\n            }, {\n                key: \"getExtension\",\n                value: function getExtension() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumber\",\n                value: function getNumber(format) {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumberType\",\n                value: function getNumberType() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"getSelectedCountryData\",\n                value: function getSelectedCountryData() {\n                    return this.selectedCountryData;\n                }\n            }, {\n                key: \"getValidationError\",\n                value: function getValidationError() {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"isValidNumber\",\n                value: function isValidNumber() {\n                    var val = this._getFullNumber().trim();\n                    var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n                    return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n                }\n            }, {\n                key: \"setCountry\",\n                value: function setCountry(originalCountryCode) {\n                    var countryCode = originalCountryCode.toLowerCase();\n                    // check if already selected\n                    if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n                        this._setFlag(countryCode);\n                        this._updateDialCode(this.selectedCountryData.dialCode, false);\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setNumber\",\n                value: function setNumber(number) {\n                    // we must update the flag first, which updates this.selectedCountryData, which is used for\n                    // formatting the number before displaying it\n                    var flagChanged = this._updateFlagFromNumber(number);\n                    this._updateValFromNumber(number);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setPlaceholderNumberType\",\n                value: function setPlaceholderNumberType(type) {\n                    this.options.placeholderNumberType = type;\n                    this._updatePlaceholder();\n                }\n            } ]);\n            return Iti;\n        }();\n        /********************\n *  STATIC METHODS\n ********************/\n        // get the country data object\n        intlTelInputGlobals.getCountryData = function() {\n            return allCountries;\n        };\n        // inject a <script> element to load utils.js\n        var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n            // inject a new script element into the page\n            var script = document.createElement(\"script\");\n            script.onload = function() {\n                forEachInstance(\"handleUtils\");\n                if (handleSuccess) handleSuccess();\n            };\n            script.onerror = function() {\n                forEachInstance(\"rejectUtilsScriptPromise\");\n                if (handleFailure) handleFailure();\n            };\n            script.className = \"iti-load-utils\";\n            script.async = true;\n            script.src = path;\n            document.body.appendChild(script);\n        };\n        // load the utils script\n        intlTelInputGlobals.loadUtils = function(path) {\n            // 2 options:\n            // 1) not already started loading (start)\n            // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n            // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n                // only do this once\n                window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n                // if we have promises, then return a promise\n                if (typeof Promise !== \"undefined\") {\n                    return new Promise(function(resolve, reject) {\n                        return injectScript(path, resolve, reject);\n                    });\n                }\n                injectScript(path);\n            }\n            return null;\n        };\n        // default options\n        intlTelInputGlobals.defaults = defaults;\n        // version\n        intlTelInputGlobals.version = \"17.0.16\";\n        // convenience wrapper\n        return function(input, options) {\n            var iti = new Iti(input, options);\n            iti._init();\n            input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n            window.intlTelInputGlobals.instances[iti.id] = iti;\n            return iti;\n        };\n    }();\n});","/**\n * Exposing intl-tel-input as a component\n */\nmodule.exports = require(\"./build/js/intlTelInput\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * 2007-2023 PayPal\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Academic Free License (AFL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/afl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n *  versions in the future. If you wish to customize PrestaShop for your\n *  needs please refer to http://www.prestashop.com for more information.\n *\n *  @author 2007-2023 PayPal\n *  @author 202 ecommerce <tech@202-ecommerce.com>\n *  @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)\n *  @copyright PayPal\n *\n */\n\nimport {ApmButton} from './apmButton.js';\n\nexport const SepaButton = function (conf) {\n  ApmButton.call(this, conf);\n};\nSepaButton.prototype = Object.create(ApmButton.prototype);\n\nSepaButton.prototype.getIdOrder = function() {\n  let url = new URL(this.controller);\n  url.searchParams.append('ajax', '1');\n  url.searchParams.append('action', 'CreateOrder');\n\n  return fetch(url.toString(), {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify({page: 'cart', addAddress: true})\n  }).then(function(res) {\n    return res.json();\n  }).then(function(data) {\n    if (data.success) {\n      return data.idOrder;\n    }\n  });\n};\n\n\nwindow.SepaButton = SepaButton;\n\n"],"names":["ApmButton","conf","this","method","Element","button","document","querySelector","controller","validationController","paypal","undefined","messages","isMoveButtonAtEnd","prototype","initButton","getPaypalButtonsContainer","append","style","display","paypalButton","Buttons","fundingSource","createOrder","data","actions","getIdOrder","bind","onApprove","sendData","isEligible","render","Tools","getElementById","buttonContainer","appendChild","url","URL","searchParams","fetch","toString","headers","body","JSON","stringify","page","apmMethod","addAddress","then","res","json","success","idOrder","form","createElement","input","name","value","action","submit","hideElementTillPaymentOptionChecked","paymentOptionSelector","hideElementSelector","showElementIfPaymentOptionChecked","checkElementSelector","showElementSelector","addMarkTo","element","styles","arguments","length","markContainer","key","setAttribute","mark","Marks","container","id","after","window","getAlert","message","typeAlert","alert","messageNode","innerHTML","className","concat","hideConfiguration","selector","$","closest","hide","showConfiguration","show","isVisible","el","getComputedStyle","width","height","opacity","visibility","disableTillConsenting","disabledElement","checkBox","disable","addEventListener","checked","enable","click","pointerEvents","checkElement","hideElement","paypalToolsHiddenElemenList","push","options","event","isHide","forEach","elem","showElement","paypalToolsShowElemenList","isShow","initPhoneInput","e","target","replace","intlTelInput","PaypalTools","Event","dispatchEvent","factory","allCountries","i","c","iso2","dialCode","priority","areaCodes","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","intlTelInputGlobals","getInstance","getAttribute","instances","documentReady","readyState","defaults","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","initialCountry","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","separateDialCode","utilsScript","regionlessNanpNumbers","forEachProp","obj","callback","keys","forEachInstance","Iti","_this","instance","Constructor","TypeError","_classCallCheck","telInput","activeItem","highlightedItem","customOptions","hasOwnProperty","hadInitialPlaceholder","Boolean","protoProps","staticProps","_this2","isMobile","test","navigator","userAgent","classList","add","Promise","autoCountryPromise","resolve","reject","resolveAutoCountryPromise","rejectAutoCountryPromise","utilsScriptPromise","resolveUtilsScriptPromise","rejectUtilsScriptPromise","promise","all","selectedCountryData","_processCountryData","_generateMarkup","_setInitialState","_initListeners","_initRequests","_processAllCountries","_processCountryCodes","_processPreferredCountries","_translateCountriesByLocale","countries","sort","_countryNameSort","countryCode","countryCodeMaxLen","countryCodes","index","lowerCaseOnlyCountries","map","country","toLowerCase","filter","indexOf","lowerCaseExcludeCountries","iso","a","b","localeCompare","dialCodes","_addCountryCode","_i","_c","rootCountryCode","j","areaCode","k","partialDialCode","substr","countryData","_getCountryData","attrs","hasAttribute","parentClass","wrapper","_createEl","parentNode","insertBefore","flagsContainer","selectedFlag","role","selectedFlagInner","selectedDialCode","dropdownArrow","countryList","_appendListItems","dropdown","hiddenInputName","lastIndexOf","type","preferred","tmp","idSuffix","insertAdjacentHTML","attributeValue","inputValue","val","charAt","_getDialCode","isRegionlessNanp","_isRegionlessNanp","_this$options","_updateFlagFromNumber","_setFlag","defaultCountry","_updateValFromNumber","_initKeyListeners","_initBlurListeners","_initDropdownListeners","_initHiddenInputListener","_this3","_handleHiddenInputSubmit","getNumber","tagName","_this4","_handleLabelClick","contains","focus","preventDefault","label","_getClosestLabel","_handleClickSelectedFlag","disabled","readOnly","_showDropdown","_handleFlagsContainerKeydown","stopPropagation","_closeDropdown","_this5","intlTelInputUtils","loadUtils","_loadAutoCountry","autoCountry","handleAutoCountry","startedLoadingAutoCountry","setTimeout","_this6","_handleKeyupEvent","_triggerCountryChange","_handleClipboardEvent","number","max","_this7","_handleSubmitOrBlurEvent","_removeEmptyDialCode","numeric","_getNumeric","s","createEvent","initEvent","remove","_setDropdownPosition","_highlightListItem","_scrollTo","_bindDropdownListeners","_trigger","shouldHaveClass","_this8","pos","getBoundingClientRect","windowTop","pageYOffset","documentElement","scrollTop","inputTop","top","dropdownHeight","offsetHeight","dropdownFitsBelow","innerHeight","dropdownFitsAbove","_toggleClass","extraTop","left","scrollLeft","_handleWindowScroll","_this9","_handleMouseoverCountryList","listItem","_getClosestListItem","_handleClickCountryList","_selectListItem","isOpening","_handleClickOffToClose","query","queryTimer","_handleKeydownOnDropdown","_handleUpDownKey","_handleEnterKey","clearTimeout","_searchForCountry","next","previousElementSibling","nextElementSibling","_startsWith","originalNumber","useNational","_intlTelInputUtils$nu","numberFormat","NATIONAL","INTERNATIONAL","format","formatNumber","_beforeSetNumber","isNanp","alreadySelected","shouldFocus","prevItem","ignoreOnlyCountriesOption","allowFail","Error","prevCountry","title","selectedFlagWidth","offsetWidth","_getHiddenSelectedFlagWidth","paddingLeft","_updatePlaceholder","nextItem","containerClone","cloneNode","flagsContainerClone","selectedFlagClone","removeChild","shouldSetPlaceholder","numberType","placeholder","getExampleNumber","flagChanged","_updateDialCode","len","setSelectionRange","removeEventListener","middle","containerHeight","containerTop","containerBottom","elementHeight","elementTop","elementBottom","newScrollTop","middleOffset","heightDifference","newDialCodeBare","hasSelectedListItem","newNumber","inputVal","newDialCode","prevDialCode","includeAreaCode","numericChars","isNaN","parseInt","trim","numericVal","start","_cap","setCountry","removeAttribute","getExtension","_getFullNumber","getNumberType","getValidationError","isValidNumber","originalCountryCode","getCountryData","injectScript","path","handleSuccess","handleFailure","script","onload","onerror","async","src","startedLoadingUtilsScript","version","iti","_init","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","get","prop","call","SepaButton","create"],"sourceRoot":""}